(self.webpackChunkrport_site=self.webpackChunkrport_site||[]).push([[414],{3415:(n,e,s)=>{"use strict";s.r(e),s.d(e,{data:()=>a});const a={key:"v-327cbcdf",path:"/docs/no10-multi-tenancy.html",title:"Multi tenancy (NOT SUPPORTED YET)",lang:"en-DE",frontmatter:{},excerpt:"",headers:[{level:2,title:"Examples",slug:"examples",children:[]},{level:2,title:"How it works",slug:"how-it-works",children:[]}],filePathRelative:"docs/no10-multi-tenancy.md"}},3100:(n,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>m});var a=s(6252);const t=(0,a.uE)('<h1 id="multi-tenancy-not-supported-yet"><a class="header-anchor" href="#multi-tenancy-not-supported-yet">#</a> Multi tenancy (NOT SUPPORTED YET)</h1><p>Rport server can isolate clients and users from different tenants. Multi tenancy is only supported when a database table is used for client- and api authentication. <code>auth_table</code>, <code>auth_user_table</code>, and <code>auth_group_table</code> must be used. Enabling multi_tenancy = true without the above prerequisites causes the rport server to exit with an error.</p><p>If multi tenancy is enabled the user auth table and the client auth table need an additional column <code>tenant</code> either varchar or int, ideally with an index. Usernames must be unique across tenants, otherwise mapping users to a tenant would fail.</p><h2 id="examples"><a class="header-anchor" href="#examples">#</a> Examples</h2>',4),l=(0,a.Wm)("div",{class:"language-mysql ext-mysql line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-mysql"},[(0,a.Wm)("code",null,"CREATE TABLE `users` (\n  `username` varchar(150) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `tenant` varchar(50) NOT NULL,\n  UNIQUE KEY `username` (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\nCREATE TABLE `groups` (\n  `username` varchar(150) NOT NULL,\n  `group` varchar(150) NOT NULL,\n  `tenant` varchar(50) NOT NULL,\n  UNIQUE KEY `username_group_tenant` (`username`,`group`,`tenant`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br")])],-1),r=(0,a.Wm)("div",{class:"language-sqlite ext-sqlite line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-sqlite"},[(0,a.Wm)("code",null,'CREATE TABLE "users" (\n  "username" TEXT(150) NOT NULL,\n  "password" TEXT(255) NOT NULL,\n  "tenant" TEXT(50) NOT NULL\n);\nCREATE UNIQUE INDEX "main"."username"\nON "users" (\n  "username" ASC\n);\nCREATE TABLE "groups" (\n  "username" TEXT(150) NOT NULL,\n  "group" TEXT(150) NOT NULL,\n  "tenant" TEXT(50) NOT NULL\n);\nCREATE UNIQUE INDEX "main"."username_group_tenant"\nON "groups" (\n  "username" ASC,\n  "group" ASC,\n  "teant" ASC\n);\n')]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"13"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"14"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"15"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"16"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"17"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"18"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"19"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"20"),(0,a.Wm)("br")])],-1),u=(0,a.uE)('<h2 id="how-it-works"><a class="header-anchor" href="#how-it-works">#</a> How it works</h2><p>Having multi-tenancy enabled each rport client is mapped to his tenant on connect. The client tables show the additional tenant object.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s -u admin:foobaz http://localhost:3000/api/v1/clients|jq\n[\n  {\n    &quot;tenant&quot;: &quot;Doe&quot;,\n    &quot;id&quot;: &quot;2ba9174e-640e-4694-ad35-34a2d6f3986b&quot;,\n    &quot;name&quot;: &quot;My Test VM&quot;,\n    &quot;os&quot;: &quot;Linux my-devvm-v3 5.4.0-37-generic #41-Ubuntu SMP Wed Jun 3 18:57:02 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux&quot;,\n    &quot;os_arch&quot;: &quot;amd64&quot;,\n    &quot;os_family&quot;: &quot;debian&quot;,\n    &quot;os_kernel&quot;: &quot;linux&quot;,\n    &quot;hostname&quot;: &quot;my-devvm-v3&quot;,\n    &quot;ipv4&quot;: [\n      &quot;192.168.3.148&quot;\n    ],\n    &quot;ipv6&quot;: [\n      &quot;fe80::20c:29ff:fec8:b1f&quot;\n    ],\n    &quot;tags&quot;: [\n      &quot;Linux&quot;,\n      &quot;Office Berlin&quot;\n    ],\n    &quot;version&quot;: &quot;0.1.6&quot;,\n    &quot;address&quot;: &quot;87.123.136.***:63552&quot;,\n    &quot;tunnels&quot;: []\n  }\n]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>API users will only see clients having the tenant mapped to the user. A user without a tenant will always get an empty list. A client without a tenant will be orphaned and will not appear in any client listing. It&#39;s good to make sure on database-level the tenant column cannot be null.</p>',4),m={render:function(n,e){const s=(0,a.up)("CodeGroupItem"),m=(0,a.up)("CodeGroup");return(0,a.wg)(),(0,a.j4)(a.HY,null,[t,(0,a.Wm)(m,null,{default:(0,a.w5)((()=>[(0,a.Wm)(s,{title:"MySQL"},{default:(0,a.w5)((()=>[l])),_:1}),(0,a.Wm)(s,{title:"SQlite3"},{default:(0,a.w5)((()=>[r])),_:1})])),_:1}),u],64)}}}}]);